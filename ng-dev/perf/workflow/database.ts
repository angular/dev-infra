/**
 * @license
 * Copyright Google LLC
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

import {Spanner} from '@google-cloud/spanner';

/**
 * The workflow performance results are stored in a spanner database within our
 * project to be able to retrieve later, The commit sha will be used as a foreign
 * key to point to specific commits found in the table of commit shas expressing
 * the full graph of commits within the git graph for the repository.
 *
 * The workflow performance table is defined with the following characteristics.
 *
 * |--------------------------------------------------------------------|
 * |              Column              |     Type     |       Notes      |
 * |--------------------------------------------------------------------|
 * |     workflow_performance_id      |  STRING(36)  |   Autogenerated  |
 * |     commit_sha                   |  STRING(40)  |                  |
 * |     value                        |  FLOAT64     |                  |
 * |     name                         |  STRING(256) |                  |
 * |--------------------------------------------------------------------|
 */

/** The reuslt of workflow performance eresult to be stored in the database. */
export interface WorkflowPerformanceRowResult {
  commit_sha: string;
  value: number;
  name: string;
}

/** Add a single workflow performance result to the spanner database. */
export async function addWorkflowPerformanceResult(result: WorkflowPerformanceRowResult) {
  /** The spanner client instance. */
  const spanner = new Spanner({
    projectId: 'internal-200822',
  });
  /** The spanner instance within our project. */
  const instance = spanner.instance('ng-measurables');
  /** The commit performance database within our spanner instance. */
  const database = instance.database('commit_performance');
  /** The table holding workflow performance information. */
  const workflowPerformanceTable = database.table('WorkflowPerformance');

  try {
    await workflowPerformanceTable.insert(result);
  } finally {
    await database.close();
  }
}
