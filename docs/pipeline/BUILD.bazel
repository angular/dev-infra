load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")

# BEGIN-DEV-ONLY
# This section is only used here in the dev-infra repo as the resulting bundle is published in
# the package.
load("//tools:defaults.bzl", "esbuild_esm_bundle")

package(default_visibility = ["//docs/pipeline:__subpackages__"])

esbuild_esm_bundle(
    name = "guides",
    define = {
        "HANDLE_MERMAID": "true",
    },
    entry_point = "//docs/pipeline/guides:index.ts",
    # JSDOM should not be bundled because it has workers and dynamic imports.
    # puppeteer-core cannot be bundled because of its cjs usage.
    external = [
        "jsdom",
        "puppeteer-core",
    ],
    output = "guides.mjs",
    platform = "node",
    target = "es2022",
    visibility = ["//visibility:public"],
    deps = [
        "//docs/pipeline/guides:index",
    ],
)

esbuild_esm_bundle(
    name = "guides_no_mermaid",
    define = {
        "HANDLE_MERMAID": "false",
    },
    entry_point = "//docs/pipeline/guides:index.ts",
    # JSDOM should not be bundled because it has workers and dynamic imports.
    external = [
        "jsdom",
    ],
    output = "guides-no-mermaid.mjs",
    platform = "node",
    target = "es2022",
    visibility = ["//visibility:public"],
    deps = [
        "//docs/pipeline/guides:index",
    ],
)

esbuild_esm_bundle(
    name = "stackblitz-bundle",
    entry_point = "//docs/pipeline/examples/stackblitz:index.ts",
    # JSDOM should not be bundled because it has workers and dynamic imports.
    external = ["jsdom"],
    output = "stackblitz.mjs",
    platform = "node",
    target = "es2022",
    visibility = ["//visibility:public"],
    deps = [
        "//docs/pipeline/examples/stackblitz:index",
    ],
)

esbuild_esm_bundle(
    name = "zip-bundle",
    entry_point = "//docs/pipeline/examples/zip:index.ts",
    output = "zip.mjs",
    platform = "node",
    target = "es2022",
    visibility = ["//visibility:public"],
    deps = [
        "//docs/pipeline/examples/zip:index",
    ],
)

esbuild_esm_bundle(
    name = "playground-bundle",
    entry_point = "//docs/pipeline/tutorials:playground.ts",
    output = "playground.mjs",
    platform = "node",
    target = "es2022",
    visibility = ["//visibility:public"],
    deps = [
        "//docs/pipeline/tutorials:playground",
    ],
)

esbuild_esm_bundle(
    name = "tutorial-bundle",
    entry_point = "//docs/pipeline/tutorials:tutorial.ts",
    output = "tutorial.mjs",
    platform = "node",
    target = "es2022",
    visibility = ["//visibility:public"],
    deps = [
        "//docs/pipeline/tutorials",
    ],
)

exports_files([
    "_guides.bzl",
    "_stackblitz.bzl",
    "_playground.bzl",
    "_tutorial.bzl",
    "BUILD.bazel",
])

# END-DEV-ONLY

nodejs_binary(
    name = "stackblitz",
    data = [
        "@npm//jsdom",
    ],
    entry_point = "//docs/pipeline:stackblitz.mjs",
    visibility = ["//visibility:public"],
)

nodejs_binary(
    name = "zip",
    entry_point = "//docs/pipeline:zip.mjs",
    visibility = ["//visibility:public"],
)

nodejs_binary(
    name = "markdown",
    data = [
        "//bazel/browsers/chromium:chromium-for-generation",
        "@npm//jsdom",
        "@npm//mermaid",
        "@npm//puppeteer-core",
    ],
    entry_point = "//docs/pipeline:guides.mjs",
    env = {
        "CHROME_BIN": "$(CHROMIUM)",
    },
    toolchains = [
        "//bazel/browsers/chromium:toolchain_alias",
    ],
    visibility = ["//visibility:public"],
)

nodejs_binary(
    name = "markdown_no_mermaid",
    data = [
        "@npm//jsdom",
    ],
    entry_point = "//docs/pipeline:guides-no-mermaid.mjs",
    visibility = ["//visibility:public"],
)

nodejs_binary(
    name = "playground",
    entry_point = "//docs/pipeline:playground.mjs",
    visibility = ["//visibility:public"],
)

nodejs_binary(
    name = "tutorial",
    entry_point = "//docs/pipeline:tutorial.mjs",
    visibility = ["//visibility:public"],
)
